#pragma once
#include "tusb.h"

#define REPORT_ID_XBOX360 0x01
#define REPORT_SIZE_XBOX360 20

// HID Report Descriptor
uint8_t const hid_report_descriptor[] = {
  0x05, 0x01, 0x09, 0x05, 0xA1, 0x01, 0x85, REPORT_ID_XBOX360,
  0x05, 0x09, 0x19, 0x01, 0x29, 0x10, 0x15, 0x00,
  0x25, 0x01, 0x75, 0x01, 0x95, 0x10, 0x81, 0x02,
  0x05, 0x01, 0x09, 0x39, 0x15, 0x00, 0x25, 0x0F,
  0x35, 0x00, 0x46, 0x3B, 0x01, 0x65, 0x14, 0x75, 0x04,
  0x95, 0x01, 0x81, 0x02, 0x75, 0x04, 0x95, 0x01, 0x81, 0x03,
  0x05, 0x02, 0x09, 0xC5, 0x09, 0xC4, 0x15, 0x00, 0x25, 0xFF,
  0x75, 0x08, 0x95, 0x02, 0x81, 0x02,
  0x05, 0x01, 
  0x09, 0x30, 0x09, 0x31, 0x09, 0x32, 0x09, 0x35,
  0x16, 0x00, 0x80,   
  0x26, 0xFF, 0x7F,   
  0x75, 0x10, 0x95, 0x04, 0x81, 0x02,
  0xC0
};

// Configuration Descriptor with HID + Vendor
#define CONFIG_TOTAL_LEN (TUD_CONFIG_DESC_LEN + TUD_HID_DESC_LEN + 9 + 7 + 7)

uint8_t const desc_configuration[] = {
  TUD_CONFIG_DESCRIPTOR(1, 2, 0x00, CONFIG_TOTAL_LEN, 0x00, 100),
  TUD_HID_DESCRIPTOR(0, 0, HID_ITF_PROTOCOL_NONE, sizeof(hid_report_descriptor), 0x81, 64, 10),
  0x09, 0x04, 0x01, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0x00,
  0x07, 0x05, 0x01, 0x02, 0x40, 0x00, 0x00,
  0x07, 0x05, 0x82, 0x02, 0x40, 0x00, 0x00
};

extern "C" {
  uint8_t const* tud_descriptor_configuration_cb(uint8_t index) {
    return desc_configuration;
  }

  uint16_t tud_descriptor_configuration_size_cb(uint8_t index) {
    return sizeof(desc_configuration);
  }

  uint8_t const* tud_hid_descriptor_report_cb(uint8_t instance) {
    return hid_report_descriptor;
  }

  uint16_t tud_hid_descriptor_report_size_cb(uint8_t instance) {
    return sizeof(hid_report_descriptor);
  }
}
